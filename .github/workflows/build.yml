name: build installer.pkg

on:
  workflow_dispatch:
    inputs: 
      release:
        description: 'release version'
        required: true
        default: 'v1.0.2'
  pull_request:
    types: [closed]

jobs:
  create_release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master'
    steps:
      - uses: actions/checkout@v2

      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
          skip-commit: "true"
          output-file: "false"
      
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        if: steps.changelog.outputs.skipped == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}

      - name: Write Changelog variable
        env:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
        run: |
          mkdir tmp
          echo "${upload_url}" > tmp/upload_url

      - uses: actions/upload-artifact@v2
        with:
          name: tmp
          path: ./tmp/
          retention-days: 2

  build_binary:
    runs-on: macOS-latest
    needs: create_release

    steps:
    - uses: actions/checkout@v2

    - name: checkout tag
      run: |
        git checkout master
        git pull
        git status
        version=$(git describe --tags `git rev-list --tags --max-count=1`)
        echo $version
        git checkout $version

    - name: switch xcode version
      run: sudo xcode-select --switch /Applications/Xcode_12.4.app
    
    - uses: actions/cache@v2
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-
  
    - name: install depencies
      run: pod install
    
    - name: import application certificate
      id: keychain
      uses: apple-actions/import-codesign-certs@v1
      with: 
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}

    - name: import installer certificate
      uses: apple-actions/import-codesign-certs@v1
      with:
        create-keychain: false
        keychain-password: ${{ steps.keychain.outputs.keychain-password }}
        p12-file-base64: ${{ secrets.CERTIFICATES_INSTALLER_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_INSTALLER_P12_PASSWORD }}

    - name: build Fire.app
      run: ./scripts/a_build_app.sh

    - name: build FireInstaller.pkg
      run: ./scripts/b_build_installer.sh

    - name: notarize FireInstaller.pkg
      env:
        apple_id: ${{ secrets.APPLE_ID }}
        apple_id_password: ${{ secrets.APPLE_ID_PASSWORD }}
      run: ./scripts/c_notarize_installer.sh

    - name: generate appcast.xml
      env:
        sparkle_key: ${{ secrets.sparkle_key }}
      run: ./scripts/d_build_appcast.sh

    - name: gather artifact
      run: cp ./Fire/Info.plist ./dist/

    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: ./dist/
        retention-days: 7

  upload_publish:
    runs-on: ubuntu-latest
    needs: build_binary
    steps:
    - uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: ./dist

    - uses: actions/download-artifact@v2
      with:
        name: tmp
        path: ./tmp
    
    - name: 'Load UploadURL'
      id: get_upload_url
      run: |
        value=`cat tmp/upload_url`
        echo "::set-output name=upload_url::${value}"

    - name: Upload Release Asset(installer.pkg)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
        asset_path: ./dist/FireInstaller.pkg
        asset_name: FireInstaller.pkg
        asset_content_type: application/octet-stream

    - name: Upload Release Asset(Fire.zip)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
        asset_path: ./dist/Fire.zip
        asset_name: Fire.zip
        asset_content_type: application/zip

    - name: commit appcast.xml to gh-pages branch
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git checkout .
        git fetch
        git checkout gh-pages
        mv dist/appcast.xml ./appcast.xml
        git add appcast.xml
        git commit -m "feat: 更新appcast.xml"
        git push origin gh-pages
